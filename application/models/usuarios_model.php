<?phpdefined('BASEPATH') OR exit('<h1 style="text-transform: uppercase; font-weight: 300; color: red; text-align:center; margin-top: 20%;">Acesso n√£o permitido</h1>');class Usuarios_model extends CI_Model {    function __construct() {	parent::__construct();    }      public function getUser($page) {        $offset = 30 * $page;        $limit = 30;        $sql = "select *, permissoes.nPermissao as tipoPermissao, user_perfil.* FROM user JOIN `permissoes` ON `user`.`permissoes_id` = `permissoes`.`idPermissao` JOIN `user_perfil` ON `user`.`idUser` = `user_perfil`.`id_user` LIMIT $offset ,$limit";        $result = $this->db->query($sql)->result();	        return $result;    }    public function search($nome, $email, $cpf) {	if ($nome != null) {	    $this->db->like('nome', $nome);	}	if ($email != null) {	    $this->db->like('email', $mail);	}	if ($cpf != null) {	    $this->db->where('cpf', $cpf);	}	$this->db->select('user.*,  permissoes.nPermissao as tipoPermissao');	$this->db->join('permissoes', 'user.permissoes_id = permissoes.idPermissao', 'left');	$this->db->limit(10);	return $this->db->get('user')->result();    }        function getByEditar($table, $idUsuario){	$this->db->where('idUsuarios', $idUsuario);	$this->db->limit(1);	return $this->db->get($table)->row();    }    function getAllTipos() {	$this->db->where('situacao', 1);	return $this->db->get('tiposUsuario')->result();    }    function getById($id) {	$this->db->where('idUsuarios', $id);	$this->db->limit(1);	return $this->db->get('user')->row();    }    function add($table, $data) {	$this->db->insert($table, $data);	if ($this->db->affected_rows() == '1') {	    return TRUE;	}	return FALSE;    }    function edit($table, $data, $fieldID, $ID) {	$this->db->where($fieldID, $ID);	$this->db->update($table, $data);	if ($this->db->affected_rows() >= 0) {	    return TRUE;	}	return FALSE;    }    function delete($table, $fieldID, $ID) {	$this->db->where($fieldID, $ID);	$this->db->delete($table);	if ($this->db->affected_rows() == '1') {	    return TRUE;	}	return FALSE;    }    function count($table) {	return $this->db->count_all($table);    }        function getVerificar($email) {	$this->db->select('user.email, user.cpf, user.nome');	$this->db->from('user');	$this->db->where('user.email', $email);	$this->db->limit(1);	return $this->db->get()->row();    }}