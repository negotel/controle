<?phpdefined('BASEPATH') OR exit('<h1 style="text-transform: uppercase; font-weight: 300; color: red; text-align:center; margin-top: 20%;">Acesso nÃ£o permitido</h1>');class All_model extends CI_Model {    function __construct() {        parent::__construct();    }        function obterDado($table) {        $query = $this->db->get($table);        return $query->result();    }    function obterDadosPG($table, $fields, $where = '', $perpage = 0, $start = 0, $one = false, $array = 'array') {        $this->db->select($fields);        $this->db->from($table);        $this->db->order_by('id_'.$table, 'DESC');        $this->db->limit($perpage, $start);        if ($where) {            $this->db->where($where);        }        $query = $this->db->get();        $result = !$one ? $query->result() : $query->row();        return $result;    }        function obterID($tabela, $tabelajoin, $cond, $campoid, $checkid ) {        if ($cond != null || $tabelajoin != null) {            $this->db->join($tabelajoin, $cond);        }	$this->db->where($campoid, $checkid);	$this->db->limit(1);	return $this->db->get($tabela)->row();    }        function obterIDs($tabela, $tabelajoin=null, $cond= null, $campoid, $checkid ) {        $this->db->select('*');        if ($cond != null || $tabelajoin != null) {            $this->db->join($tabelajoin, $cond);        }	$this->db->where($campoid, $checkid);	$this->db->limit(1);	return $this->db->get($tabela)->row();    }        function obterDadosID($tabela, $tabelajoin=null, $cond= null, $campoid, $checkid ) {        if ($cond != null || $tabelajoin != null) {            $this->db->join($tabelajoin, $cond);        }	$this->db->where($campoid, $checkid);	return $this->db->get($tabela)->result();    }        function inserirDados($table,$data){        $this->db->insert($table, $data);                 if ($this->db->affected_rows() == '1'){            return TRUE;        }        return FALSE;           }    function editarDados($table,$data,$fieldID,$ID){        $this->db->where($fieldID,$ID);        $this->db->update($table, $data);        if ($this->db->affected_rows() >= 0){            return TRUE;        }	return FALSE;           }        function deletaDados($table,$fieldID,$ID){        $this->db->where($fieldID,$ID);        $this->db->delete($table);        if ($this->db->affected_rows() == '1'){            return TRUE;	}        return FALSE;     }        public function pesquisar($tabela, $camponame1, $campovalue1, $camponame2, $campovalue2, $camponame3, $campovalue3) {        if ($camponame1 != null) {	    $this->db->like($camponame1, $campovalue1);	}	if ($camponame2 != null) {	    $this->db->like($camponame2, $campovalue2);	}        if ($camponame3 != null) {	    $this->db->like($camponame3, $campovalue3);	}        return $this->db->get($tabela)->result();    }        function obterImagensCapa($tabela, $limiti) {	$this->db->limit($limiti);	return $this->db->get($tabela)->result();    }        function contarRegistro($tabela) {        return $this->db->count_all($tabela);    }    public function obterImagens($page) {        $offset = 30 * $page;        $limit = 30;        $sql = "SELECT * FROM imagens LIMIT $offset ,$limit";        $result = $this->db->query($sql)->result();        return $result;    }  }