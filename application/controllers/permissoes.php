<?phpdefined('BASEPATH') OR exit('<h1 style="text-transform: uppercase; font-weight: 300; color: red; text-align:center; margin-top: 20%;">Acesso não permitido</h1>');class Permissoes extends CI_Controller {    function __construct() {      parent::__construct();	if ((!$this->session->userdata('session_id')) || (!$this->session->userdata('logado'))) {          redirect('dashboard/login');	}	$this->load->library('form_validation');	$this->load->helper(array('form', 'codegen_helper'));	$this->load->model('all_model', '', TRUE);	$this->data['permissoes'] = 'Permissões';        $this->data['title'] = 'Permissões';	$this->load->model('all_model', '', TRUE);	$this->data['dadosUsuario'] = $this->all_model->obterID('user', 'user_perfil', 'user_perfil.id_user = user.idUser', 'idUser', $this->session->userdata('idUser'));        $this->data['config'] = $this->all_model->obterID('config_sistema','','','idConfig', '1');	  }    public function index() {	if(!$this->permission->checkPermission($this->session->userdata('permissao'),'vPermissao')){           $this->session->set_flashdata('error','Você não tem permissão para visualizar Permissão.');           redirect(base_url());        }            $this->data['vPermissao'] = 'Permissões';            $this->data['obterPermissao'] = $this->all_model->obterDado('permissoes');            $this->data['view'] = 'permissoes/permissoes';            $this->load->view('tema/home',  $this->data);    }           public function adicionar(){	if(!$this->permission->checkPermission($this->session->userdata('permissao'),'aPermissao')){           $this->session->set_flashdata('error','Você não tem permissão para Adicionar Permissão.');           redirect(base_url());        }        $this->form_validation->set_rules('nome', 'Nome', 'trim|required');        $this->form_validation->set_rules('situacao', 'Situação', 'trim|required');        if ($this->form_validation->run() == false) {            $this->data['custom_error'] = (validation_errors() ? '<div class="form_error">' . validation_errors() . '</div>' : false);        } else {            $nomePermissao = $this->input->post('nome');            $situacao = $this->input->post('situacao');            $permissoes = array(                //usuarios		'aUsuario' => $this->input->post('aUsuario'),		'eUsuario' => $this->input->post('eUsuario'),		'dUsuario' => $this->input->post('dUsuario'),		'vUsuario' => $this->input->post('vUsuario'),		'pUsuario' => $this->input->post('pUsuario'),		//Permissões		'aPermissao' => $this->input->post('aPermissao'),		'ePermissao' => $this->input->post('ePermissao'),		'dPermissao' => $this->input->post('dPermissao'),		'vPermissao' => $this->input->post('vPermissao'),                //clientes		'aCliente' => $this->input->post('aCliente'),		'eCliente' => $this->input->post('eCliente'),		'dCliente' => $this->input->post('dCliente'),		'vCliente' => $this->input->post('vCliente'),		'pCliente' => $this->input->post('pCliente'),                //Produtos		                'aProduto' => $this->input->post('aProduto'),		'eProduto' => $this->input->post('eProduto'),		'dProduto' => $this->input->post('dProduto'),		'vProduto' => $this->input->post('vProduto'),		'pProduto' => $this->input->post('pProduto'),                //Nota Fiscal                'aNotaFiscal' => $this->input->post('aNotaFiscal'),		'eNotaFiscal' => $this->input->post('eNotaFiscal'),		'dNotaFiscal' => $this->input->post('dNotaFiscal'),		'vNotaFiscal' => $this->input->post('vNotaFiscal'),		'pNotaFiscal' => $this->input->post('pNotaFiscal'),                //Configurações do Painel                'eConfig' => $this->input->post('eConfig'),                'vConfig' => $this->input->post('vConfig')            );            $permissoes = serialize($permissoes);            $data = array(                'nPermissao' => $nomePermissao,                'permissoes' => $permissoes,                'situacao' => $situacao,                'criado' => date('Y-m-d H:i:m'),            );                        if ($this->all_model->inserirDados('permissoes', $data) == TRUE) {                $this->session->set_flashdata('success', 'Permissão adicionada com sucesso!');                redirect(base_url('permissoes'));            } else {                $this->session->set_flashdata('error', 'Ops! ocorreu um erro!');                redirect(base_url('permissoes/adicionar'));            }        }        $this->data['aPermissao'] = 'Adicionar';        $this->data['view'] = 'permissoes/adicionar';        $this->load->view('tema/home',  $this->data);    }        function editar() {	if(!$this->permission->checkPermission($this->session->userdata('permissao'),'ePermissao')){           $this->session->set_flashdata('error','Você não tem permissão para Editar Permissão.');           redirect(base_url());        }        	$getRestrito = $this->all_model->obterID('permissoes', '', '', 'idPermissao', $this->uri->segment(3));	if (!$getRestrito) {	    $this->session->set_flashdata('error', ' O Permissão não encontrado!');	    redirect(base_url('permissoes'));	} else {	    $this->data['result'] = $getRestrito;	}         $this->data['custom_error'] = '';        $this->form_validation->set_rules('nome', 'Nome', 'trim|required|xss_clean');        if ($this->form_validation->run() == false) {            $this->data['custom_error'] = (validation_errors() ? '<div class="form_error">' . validation_errors() . '</div>' : false);        } else {            $nomePermissao = $this->input->post('nome');            $situacao = $this->input->post('situacao');            $permissoes = array(                //usuarios		'aUsuario' => $this->input->post('aUsuario'),		'eUsuario' => $this->input->post('eUsuario'),		'dUsuario' => $this->input->post('dUsuario'),		'vUsuario' => $this->input->post('vUsuario'),		'pUsuario' => $this->input->post('pUsuario'),		//Permissões		'aPermissao' => $this->input->post('aPermissao'),		'ePermissao' => $this->input->post('ePermissao'),		'dPermissao' => $this->input->post('dPermissao'),		'vPermissao' => $this->input->post('vPermissao'),                //clientes		'aCliente' => $this->input->post('aCliente'),		'eCliente' => $this->input->post('eCliente'),		'dCliente' => $this->input->post('dCliente'),		'vCliente' => $this->input->post('vCliente'),		'pCliente' => $this->input->post('pCliente'),                //Produtos		                'aProduto' => $this->input->post('aProduto'),		'eProduto' => $this->input->post('eProduto'),		'dProduto' => $this->input->post('dProduto'),		'vProduto' => $this->input->post('vProduto'),		'pProduto' => $this->input->post('pProduto'),                //Nota Fiscal                'aNotaFiscal' => $this->input->post('aNotaFiscal'),		'eNotaFiscal' => $this->input->post('eNotaFiscal'),		'dNotaFiscal' => $this->input->post('dNotaFiscal'),		'vNotaFiscal' => $this->input->post('vNotaFiscal'),		'pNotaFiscal' => $this->input->post('pNotaFiscal'),                //Configurações do Painel                'eConfig' => $this->input->post('eConfig'),                'vConfig' => $this->input->post('vConfig')            );                       $permissoes = serialize($permissoes);            $dados = array(                'nPermissao' => $nomePermissao,                'permissoes' => $permissoes,                'situacao' => $situacao,                'modificado' => date('Y-m-d H:i:m')            );            if ($this->all_model->editarDados('permissoes', $dados, 'idPermissao', $this->input->post('idPermissao')) == TRUE) {                $this->session->set_flashdata('success', 'Permissão editada com sucesso!');                redirect(base_url() . 'permissoes');            } else {                $this->data['custom_error'] = '<div class="form_error"><p>Ocorreu um errro.</p></div>';            }        }        $this->data['ePermissao'] = 'permissoes/editar';        $this->data['view'] = 'permissoes/editar';        $this->load->view('tema/home',  $this->data);    }            // funcão para ativar uma permissão     public function ativar(){	if(!$this->permission->checkPermission($this->session->userdata('permissao'),'ePermissao') && $this->permission->checkPermission($this->session->userdata('permissao'),'dPermissao') ){           $this->session->set_flashdata('error','Você não tem permissão para ativa Permissão.');           redirect(base_url());        }	$id =  $this->input->post('id');        $dados = array(            'situacao' => '1'	);	if ($this->all_model->editarDados('permissoes', $dados, 'idPermissao', $id) == TRUE) {            $this->session->set_flashdata('success','Permissão ativado com sucesso! ');             redirect(base_url().'permissoes');          }else{            $this->session->set_flashdata('error','Ops! algo deu error');            redirect(base_url().'permissoes');         }                 }        // funcão para bloquear uma permissão     public function bloquear(){	if(!$this->permission->checkPermission($this->session->userdata('permissao'),'ePermissao') && $this->permission->checkPermission($this->session->userdata('permissao'),'dPermissao') ){            $this->session->set_flashdata('error','Você não tem permissão para Bloquear Permissão.');            redirect(base_url());        }	$id =  $this->input->post('id');        $dados = array(            'situacao' => '2'	);        if ($this->all_model->editarDados('permissoes', $dados, 'idPermissao', $id) == TRUE) {            $this->session->set_flashdata('success','Permissão bloqueado com sucesso!');             redirect(base_url().'permissoes');          }else{            $this->session->set_flashdata('error','Ops! algo deu error');            redirect(base_url().'permissoes');         }                 }}