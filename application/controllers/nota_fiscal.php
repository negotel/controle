<?phpdefined('BASEPATH') OR exit('<h1 style="text-transform: uppercase; font-weight: 300; color: red; text-align:center; margin-top: 20%;">Acesso não permitido</h1>');class Nota_Fiscal extends CI_Controller {    private  $tabela = 'nota_fiscal';             function __construct() {        parent::__construct();        $this->load->library('form_validation');        $this->load->model('all_model','',TRUE);        $this->load->library('pagination');        $this->load->helpers('removetudo_helper');        $this->load->helpers('modal_helper');        $this->load->helpers('data_helper');        $this->data['menuNotaFiscal'] = 'Nota Fiscal';	$this->data['getUser'] = $this->all_model->obterID('user', 'user_perfil', 'user_perfil.id_user = user.idUser', 'idUser', $this->session->userdata('idUser'));        $this->data['config'] = $this->all_model->obterID('config_sistema','','','idConfig', '1');    }    public function index(){        $this->paginas();    }        public function emitir() {        if(!$this->permission->checkPermission($this->session->userdata('permissao'),'aNotaFiscal')){           $this->session->set_flashdata('error','Você não tem permissão para visualizar produtos.');           redirect(base_url());        }        $this->data['aNotaFiscal'] = 'Produtos';	$this->data['view'] = 'nota_fiscal/emitir';        $this->load->view('template/header', $this->data);        $this->load->view('template/menu',  $this->data);	$this->load->view('template/home');	$this->load->view('template/rodape');    }        function adicionarProduto(){                    $query = $this->db->get_where('produtos',array('descricao_produto ' => $this->input->post('descricao_produto')));            $result = $query->result_array();                        if(count($result) > 0) {                  echo json_encode(array('result' => true, 'mensagen' => 'Ops, Produto já Cadastro.'));            }else{                       $dados = array(                'descricao_produto' => $this->input->post('descricao_produto'),                'ncm_produto' => $this->input->post('ncm_produto'),                'cest_produto' => $this->input->post('cest_produto'),                'uc_produto' => $this->input->post('uc_produto'),                'vuc_produto' => $this->input->post('vuc_produto'),                'ut_produto' => $this->input->post('ut_produto'),                'qt_produto' => $this->input->post('qt_produto'),                'vut_produto' => $this->input->post('vut_produto'),                'data_cadastro' => date('Y-m-d H:i:s')            );                    if ($this->all_model->inserirDados('produtos', $dados) == TRUE) {                echo json_encode(array('result' => true, 'mensagen' => 'Produto Inserido com Sucesso'));            } else {                echo json_encode(array('result' => false, 'mensagen' => 'Ops, houve um error!'));            }        }    }        public function lista_produtos() {        $this->paginas();                   }        function paginas(){        if(!$this->permission->checkPermission($this->session->userdata('permissao'),'vProduto')){           $this->session->set_flashdata('error','Você não tem permissão para visualizar Produto.');           redirect(base_url());        }                $codigo = $this->input->get('id_produtos');        $descricao_produto = $this->input->get('descricao_produto');                    if($codigo == null && $descricao_produto == null){            $config['base_url'] = base_url('produtos/paginas');            $config['total_rows'] = $this->all_model->contarRegistro('produtos');            $config['per_page'] = 25;            $config['next_link'] = '<i class="zmdi zmdi-chevron-right"></i>';            $config['prev_link'] = ' <i class="zmdi zmdi-chevron-left"></i>';            $config['full_tag_open'] = ' <ul class="pagination">';            $config['full_tag_close'] = '</ul>';            $config['num_tag_open'] = '<li>';            $config['num_tag_close'] = '</li>';            $config['cur_tag_open'] = '<li class="active"><a>';            $config['cur_tag_close'] = '</a></li>';            $config['prev_tag_open'] = '<li>';            $config['prev_tag_close'] = '</li>';            $config['next_tag_open'] = '<li>';            $config['next_tag_close'] = '</li>';            $config['first_link'] = '<i class="zmdi zmdi-chevron-left"></i><i class="zmdi zmdi-chevron-left"></i>';            $config['last_link'] = '<i class="zmdi zmdi-chevron-right"></i><i class="zmdi zmdi-chevron-right"></i>';            $config['first_tag_open'] = '<li>';            $config['first_tag_close'] = '</li>';            $config['last_tag_open'] = '<li>';            $this->pagination->initialize($config);             $this->data['obterProduto'] = $this->all_model->obterDados('produtos','*','',$config['per_page'],$this->uri->segment(3));        }else{            $this->data['obterProduto'] = $this->all_model->pesquisar('produtos', 'id_produtos', $codigo, 'descricao_produto', $descricao_produto, '', '');        }                $this->data['obterDados'] = $this->all_model->obterDados($this->tabela,'*');        $this->data['vProduto'] = 'Produtos';	$this->data['view'] = 'produtos/lista_produtos';        $this->load->view('template/header', $this->data);        $this->load->view('template/menu',  $this->data);	$this->load->view('template/home');	$this->load->view('template/rodape');    }        public function editar($obterID) {                if(!$this->permission->checkPermission($this->session->userdata('permissao'),'aProduto')){           $this->session->set_flashdata('error','Você não tem permissão para visualizar Produto.');           redirect(base_url());        }        $getRestrito = $this->all_model->obterID('produtos', '', '', 'id_produtos', $obterID);	if (!$getRestrito) {	    $this->session->set_flashdata('error', ' O Produto não encontrado!');	    redirect(base_url('produtos/lista_produtos'));	} else {	    $this->data['produtoID'] = $getRestrito;	}                 $this->data['aProduto'] = 'Produtos';	$this->data['view'] = 'produtos/editar';        $this->load->view('template/header', $this->data);        $this->load->view('template/menu',  $this->data);	$this->load->view('template/home');	$this->load->view('template/rodape');    }        function editarProduto(){                $query = $this->db->get_where('produtos',array('descricao_produto ' => $this->input->post('descricao_produto')));        $result = $query->result_array();        $dados = array(            'descricao_produto' => $this->input->post('descricao_produto'),            'ncm_produto' => $this->input->post('ncm_produto'),            'cest_produto' => $this->input->post('cest_produto'),            'uc_produto' => $this->input->post('uc_produto'),            'vuc_produto' => $this->input->post('vuc_produto'),            'ut_produto' => $this->input->post('ut_produto'),            'qt_produto' => $this->input->post('qt_produto'),            'vut_produto' => $this->input->post('vut_produto'),            'data_modificado' => date('Y-m-d H:i:s')        );        if ($this->all_model->editarDados('produtos', $dados, 'id_produtos', $this->input->post('id_produtos')) == TRUE) {            echo json_encode(array('result' => true, 'mensagen' => 'Produto Editado com Sucesso'));        } else {            echo json_encode(array('result' => false, 'mensagen' => 'Ops, houve um error!'));        }    }        function excluir(){	if(!$this->permission->checkPermission($this->session->userdata('permissao'),'dProduto')){           $this->session->set_flashdata('error','Você não tem permissão para excluir produto.');           redirect(base_url());        }	$id =  $this->input->post('id');	if($this->all_model->deletaDados('produtos','id_produtos',$id) == TRUE){            $this->session->set_flashdata('success','Produto excluido com sucesso!');             redirect(base_url('produtos/lista_produtos'));          }else{            $this->session->set_flashdata('error',' Ops! algo deu errado');            redirect(base_url('produtos/lista_produtos'));         }                  }          function excluirProduto($id){	if(!$this->permission->checkPermission($this->session->userdata('permissao'),'dProduto')){           $this->session->set_flashdata('error','Você não tem permissão para excluir produto.');           redirect(base_url());        }		if($this->all_model->deletaDados('produtos','id_produtos',$id) == TRUE){            $this->session->set_flashdata('success','Produto excluido com sucesso!');             redirect(base_url('produtos/lista_produtos'));          }else{            $this->session->set_flashdata('error',' Ops! algo deu errado');            redirect(base_url('produtos/lista_produtos'));         }                  }}