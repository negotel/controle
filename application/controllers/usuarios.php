<?phpdefined('BASEPATH') OR exit('<h1 style="text-transform: uppercase; font-weight: 300; color: red; text-align:center; margin-top: 20%;">Acesso não permitido</h1>');class Usuarios extends CI_Controller {    private $tabela = 'usuarios';    function __construct() {	parent::__construct();	if ((!$this->session->userdata('session_id')) || (!$this->session->userdata('logado'))) {	    redirect('login');	}	$this->load->helper(array('form', 'codegen_helper'));	$this->load->library('form_validation');	$this->load->model('usuarios_model', '', TRUE);        $this->load->helper('data_helper');	$this->load->model('permissoes_model', '', TRUE);        $this->data['menuConfiguracoes'] = 'Configuraçoes';	$this->load->model('all_model', '', TRUE);		$this->data['getUser'] = $this->all_model->obterID('user', 'user_perfil', 'user_perfil.id_user = user.idUser', 'idUser', $this->session->userdata('idUser'));        $this->data['config'] = $this->all_model->obterID('config_sistema','','','idConfig', '1');    }        public function index() {        	$this->data['view'] = 'usuarios/usuarios';        $this->load->view('template/header');        $this->load->view('template/menu',  $this->data);	$this->load->view('template/home');	$this->load->view('template/rodape');    }        public function getUser() {                 $page = $this->input->get('page');                $users = $this->usuarios_model->getUser($page);                foreach ($users as $user) {                        if ($user->foto_user == null) {                    $foto = base_url('assets/img/demo/profile-pics/default.jpg');            } else {                $foto = base_url('assets/img/demo/profile-pics/' . $user->foto_user);            }             $mostraQual = null;            if ($this->permission->checkPermission($this->session->userdata('permissao'), 'eUsuario')) {                if ($user->situacao == 1) {                    $mostraQual = '<button href="#bloquear-0"  role="button" data-toggle="modal" bloquear="'.$user->idUser . '" id="situacao2" style="margin-right: 1%" class="waves-effect text-uppercase c-red" title="Bloquear Usuário"> Bloquear</button>';                } else {                    $mostraQual = '<button href="#ativar-1"  role="button" data-toggle="modal" ativar="' . $user->idUser . '" id="situacao1" style="margin-right: 1%" class="waves-effect text-uppercase c-green" title="Ativar Usuário"> Ativar</button>';                }            }                        if($user->situacao_user == '1'){ $lab = 'green'; $tipo = 'ATIVO';}elseif($user->situacao_user == '2'){$lab = 'red'; $tipo = 'BLOQUEADO';}                        $html = "                <div class='col-md-2 col-sm-4 col-xs-6' >                    <div class='c-item'>                        <a href='#detalhes' data-toggle='modal' data-target='#detalhes' data-whatever='$user->idUser' data-whatever1='$user->nome_user' data-whatever2='$user->email_user' data-whatever3='$user->celular_user' data-whatever4='$user->cpf_user / $user->rg_user'  data-whatever5='$tipo / $user->tipoPermissao' data-whatever6='$user->rua_user, n°$user->numero_user - $user->bairro_user, $user->cidade_user - $user->uf_user cep: $user->cep_user' data-whatever7='$user->genero_user' data-whatever8='".dataFormatoBR($user->data_cadastro)."' class='ci-avatar'>                            <img src='$foto' alt=''>                        </a>                        <div class='c-info'>                            <strong>$user->nome_user</strong>                            <small>$user->email_user</small>                            <small>$user->tipoPermissao</small>                        </div>                        <div class='c-footer'>                            $mostraQual                        </div>                    </div>                </div>            ";            echo $html;        }           }    public function adicionar(){	        if(!$this->permission->checkPermission($this->session->userdata('permissao'),'aUsuario')){           $this->session->set_flashdata('error','Você não tem permissão para visualizar Usuário.');           redirect(base_url());        }                $this->form_validation->set_rules('nome', 'Nome', 'trim|required|xss_clean');        $this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email|is_unique[usuarios.email]');        $this->form_validation->set_rules('celular', 'Telefone', 'trim|required|xss_clean');        $this->form_validation->set_rules('situacao', 'Situação', 'trim|required|xss_clean');        $this->form_validation->set_rules('permissoes_id', 'Permissão', 'trim|required|xss_clean');	$this->load->library('encrypt');	if ($this->form_validation->run() == false) {             $this->data['custom_error'] = (validation_errors() ? '<div class="form_error">'.validation_errors().'</div>' : false);        } else {     	    $data = array(		'nome' => set_value('nome'),		'rg' => set_value('rg'),		'cpf' => set_value('cpf'),		'email' => set_value('email'),		'senha' => $this->encrypt->sha1($this->input->post('senha')),		'celular' => set_value('celular'),		'situacao' => $this->input->post('situacao'),		'permissoes_id' => $this->input->post('permissoes_id'),		'cliente_id' => $this->session->userdata('cliente_id'),		'tipo_usuario' => 'sub',		'dataCadastro' => date('Y-m-d')	    );	    if ($this->usuarios_model->add('usuarios', $data) == TRUE) {                                $descricao = "Adicionou um usuário com o nome (".$this->input->post('nome').")";                $modulo = "Usuário";                $acao = "Adicinar";                $data_logs = array(                    'usuarios' => $this->session->userdata('nome'),                    'descricao' => $descricao,                    'modulo' => $modulo,                    'acao' => $acao,                    'dataCadastro' => date('Y-m-d H:i:s')                );                $this->usuarios_model->add('logs_system', $data_logs);                		$this->session->set_flashdata('success', 'Usuário cadastrado com sucesso!');		redirect(base_url() . 'usuarios');	    } else {		$this->data['custom_error'] = '<div class="form_error"><p>Ocorreu um erro.</p></div>';	    }	}	$this->data['permissoes'] = $this->permissoes_model->getActive('permissoes', 'permissoes.idPermissao,permissoes.nPermissao,permissoes.cliente_id', $this->session->userdata('cliente_id'));	$this->data['menuAdicionar'] = 'Adicionar';	$this->data['view'] = 'usuarios/adicionar';        $this->load->view('template/header');        $this->load->view('template/menu',  $this->data);	$this->load->view('template/home');	$this->load->view('template/rodape');	    }        public function editar() {        if(!$this->permission->checkPermission($this->session->userdata('permissao'),'eUsuario')){           $this->session->set_flashdata('error','Você não tem permissão para visualizar Usuário.');           redirect(base_url());        }        		$getRestrito = $this->usuarios_model->getByEditar($this->tabela, $this->uri->segment(3));	if (!$getRestrito) {	    $this->session->set_flashdata('error', ' O usuário não encontrado!');	    redirect(base_url('usuarios'));	} else {	    $this->data['result'] = $getRestrito;	}	$this->form_validation->set_rules('nome', 'Nome', 'trim|required|xss_clean');	$this->form_validation->set_rules('email', 'Email', 'trim|required|xss_clean');	$this->form_validation->set_rules('celular', 'Telefone', 'trim|required|xss_clean');	$this->form_validation->set_rules('situacao', 'Situação', 'trim|required|xss_clean');	$this->form_validation->set_rules('permissoes_id', 'Permissão', 'trim|required|xss_clean');	$this->load->library('encrypt');	if ($this->form_validation->run() == false) {	    $this->data['custom_error'] = (validation_errors() ? '<div class="form_error">' . validation_errors() . '</div>' : false);	} else {	    	    $id = $this->input->post('idUser');	    	    if ($this->input->post('idUser') == 1 && $this->input->post('situacao') == 2) {		$this->session->set_flashdata('error', 'O usuário super admin não pode ser desativado!');		redirect(base_url() . 'usuarios');	    }	    	    $senha = $this->input->post('senha');	    if ($senha != null) {		$senha = $this->encrypt->sha1($senha);		$data = array(		    'nome' => set_value('nome'),		    'rg' => set_value('rg'),		    'cpf' => set_value('cpf'),		    'email' => set_value('email'),		    'senha' => $senha,		    'celular' => set_value('celular'),		    'situacao' => $this->input->post('situacao'),		    'permissoes_id' => $this->input->post('permissoes_id')		);	    } else {		$data = array(		    'nome' => set_value('nome'),		    'rg' => set_value('rg'),		    'cpf' => set_value('cpf'),		    'email' => set_value('email'),		    'celular' => set_value('celular'),		    'situacao' => $this->input->post('situacao'),		    'permissoes_id' => $this->input->post('permissoes_id')		);	    }	    if ($this->usuarios_model->edit('usuarios', $data, 'idUser', $this->input->post('idUser')) == TRUE) {		$this->session->set_flashdata('success', 'Usuário Alterado com sucesso!');		redirect(base_url() . 'usuarios');	    } else {		$this->data['custom_error'] = '<div class="form_error"><p>Ocorreu um erro.</p></div>';	    }	}	$this->data['permissoes'] = $this->permissoes_model->getActive('permissoes', 'permissoes.idPermissao,permissoes.nPermissao,permissoes.cliente_id', $this->session->userdata('cliente_id'));	$this->data['menuUsuario'] = 'Usuario';	$this->data['view'] = 'usuarios/editar';	$this->load->view('template/header');	$this->load->view('template/menu', $this->data);	$this->load->view('template/home');	$this->load->view('template/rodape');    }    public function ativar(){                if(!$this->permission->checkPermission($this->session->userdata('permissao'),'eUsuario')){           $this->session->set_flashdata('error','Você não tem permissão para visualizar Usuário.');           redirect(base_url());        }        	if(!$this->permission->checkPermission($this->session->userdata('permissao'),'eUsuario')){	   $this->session->set_flashdata('error','Você não tem permissão para ativar usuário.');	   redirect(base_url());	}	$id =  $this->input->post('id');        $data = array(            'situacao' => '1'	);	if($this->usuarios_model->edit('usuarios',$data,'idUser',$id) == TRUE){            $this->session->set_flashdata('success','Usuário ativado com sucesso! ');             redirect(base_url().'usuarios');          }else{            $this->session->set_flashdata('error','Ops! algo deu error');            redirect(base_url().'usuarios');         }                  }           public function bloquear(){          	if(!$this->permission->checkPermission($this->session->userdata('permissao'),'eUsuario')){	   $this->session->set_flashdata('error','Você não tem permissão para bloquer usuário.');	   redirect(base_url());	}		if ($this->input->post('id') == 1) {	    $this->session->set_flashdata('error', 'O usuário super admin não pode ser desativado!');	    redirect(base_url() . 'usuarios');	}		$id =  $this->input->post('id');        $data = array(		    'situacao' => '2'		);	if($this->usuarios_model->edit('usuarios',$data,'idUser',$id) == TRUE){            $this->session->set_flashdata('success','Usuário bloqueado com sucesso!');             redirect(base_url().'usuarios');          }else{            $this->session->set_flashdata('error','Ops! algo deu error');            redirect(base_url().'usuarios');         }                  }     public function excluir(){	if(!$this->permission->checkPermission($this->session->userdata('permissao'),'dUsuario')){           $this->session->set_flashdata('error','Você não tem permissão para Excluir Usuário.');           redirect(base_url());        }        	 if ($this->input->post('id') == 1) {	    $this->session->set_flashdata('error', 'O usuário super admin não pode ser excluido!');	    redirect(base_url() . 'usuarios');	}	$id =  $this->input->post('id');	if($this->usuarios_model->delete('usuarios','idUser',$id) == TRUE){            $this->session->set_flashdata('success','Usuário excluido com sucesso!');             redirect(base_url().'usuarios');          }else{            $this->session->set_flashdata('error',' Ops! algo deu errado');            redirect(base_url().'usuarios');         }                  }}