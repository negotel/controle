<?phpdefined('BASEPATH') OR exit('<h1 style="text-transform: uppercase; font-weight: 300; color: red; text-align:center; margin-top: 20%;">Acesso não permitido</h1>');class Login extends CI_Controller {    public function __construct() {        parent::__construct();        $this->load->library('form_validation');	$this->load->library('My_PHPMailer');        $this->load->model('recuperar_model','',TRUE);        $this->load->model('all_model','',TRUE);	$this->data['getUser'] = $this->all_model->obterID('user', 'user_perfil', 'user_perfil.id_user = user.idUser', 'idUser', $this->session->userdata('idUser'));        $this->data['config'] = $this->all_model->obterID('config_sistema','','','idConfig', '1');    }     public function index() {       // $this->session->sess_destroy();	if (($this->session->userdata('logado'))) {	    $this->session->set_flashdata('error','Você esta logado, é você não tem permissão paracessa essa pagina');	    redirect('dashboard');	}	$this->load->view('dashboard/login', $this->data);    }        public function autenticarUser(){        $this->load->library('form_validation');        $this->form_validation->set_rules('email','Email','valid_email|required|xss_clean|trim');        $this->form_validation->set_rules('senha','Senha','required|xss_clean|trim');        $ajax = $this->input->get('ajax');        if ($this->form_validation->run() == false) {            if($ajax == true){                $json = array('result' => false);                echo json_encode($json);            }else{                $this->session->set_flashdata('error','Os dados de acesso estão incorretos.');                redirect($this->login);            }        }else{            $email = $this->input->post('email');            $senha = $this->input->post('senha');            $this->load->library('encrypt');               $senha = $this->encrypt->sha1($senha);            $this->db->where('email_user',$email);            $this->db->where('senha_user',$senha);            $this->db->where('situacao_user',1);            $this->db->limit(1);            $usuario = $this->db->get('user')->row();            if(count($usuario) > 0){                $dados = array('idUser' => $usuario->idUser, 'permissao' => $usuario->permissoes_id , 'email_user' => $usuario->email_user, 'logado' => TRUE);                $this->session->set_userdata($dados);                if($ajax == true){                    $json = array('result' => true);                    echo json_encode($json);                }else{                    redirect(base_url('dashboard'));                }             }else{                if($ajax == true){                    $json = array('result' => false);                    echo json_encode($json);                }else{                    $this->session->set_flashdata('error','Os dados de acesso estão incorretos.');                    redirect($this->login);                }            }        }    }       public function recuperar(){	function base64url_encode($data) {            return rtrim(strtr(base64_encode($data), '+/', '-_'), '=');        }        $this->form_validation->set_rules('email', 'Email', 'trim|required|xss_clean');        $email = $this->input->post('email');	$emailget  = $this->recuperar_model->getEmail($email);        if ($emailget) {            $nome           =   $emailget->nome_user ;            $codigo         =   base64url_encode($email);            $data_expirar   = date('Y-m-d H:i:s', strtotime('+2 hour'));            $this->recuperar_model->getActive('user', '*', $this->uri->segment(3));                        $this->data['result'] = $emailget;            $conteudo = $this->load->view('tema/recuperarSenha', $this->data, true);            $sql = "UPDATE user SET codigo = ?, data_expirar = ? WHERE email_user = ?";            $this->db->query($sql, array($codigo, $data_expirar ,$email));            $Email = new PHPMailer();            $Email->SetLanguage("br");            $Email->IsSMTP(); // Habilita o SMTP            $Email->SMTPAuth = true; //Ativa e-mail autenticado            $Email->Host = 'smtp.printrv.com.br'; // Servidor de envio            $Email->Port = '587'; // Porta de envio            $Email->Username = 'noreplay@printrv.com.br'; //e-mail que ser autenticado            $Email->Password = '#2017RVgrafica@'; // senha do email            // ativa o envio de e-mails em HTML, se false, desativa.            $Email->IsHTML(true);            // email do remetente da mensagem            $Email->From = 'noreplay@printrv.com.br';            // nome do remetente do email            $Email->FromName = utf8_decode('Recuperação de senha');            // Endere�o de destino do emaail, ou seja, pra onde voc� quer que a mensagem do formul�rio v�?            $Email->AddReplyTo($email, '$email');            $Email->AddAddress("$email"); // para quem ser� enviada a mensagem            // informando no email, o assunto da mensagem            $Email->Subject = utf8_decode(" Solicitação  de nova Senha ");            // Define o texto da mensagem (aceita HTML)            $Email->Body .=utf8_decode($conteudo);            //Validando o servidor SMTP            if(!$Email->Send()):            $this->session->set_flashdata('error','Houve um error ao tentar recuperar sua senha. <br>'. $Email->ErrorInfo);            redirect(base_url().'login/status?=false');            else:                echo json_encode(array('result' => false, 'mensagen' => 'O processo de redefinição de senha já foi iniciada. Verifique seu e-mail para obter instruções de como prosseguir.'));//                $this->session->set_flashdata('success','O processo de redefinição de senha já foi iniciada. <br>Verifique seu e-mail para obter instruções de como prosseguir.');//                redirect(base_url().'login/status?=true');            exit;            endif;        }else{            echo json_encode(array('result' => false, 'mensagen' => 'E-mail não encontrado'));        }        if ($this->form_validation->run() == false) {            $this->session->set_flashdata('error','Houve um error ao tentar recuperar sua senha, aguarde você está sendo redirecionado...');;            redirect(base_url().'login/status?=false');        } else {         }    }    public function mudarSenha(){        $this->load->library('encrypt');        $senha = $this->input->post('newSenha');        $senha = $this->encrypt->sha1($senha);        $email = base64_decode($this->input->post('codigo'));        $data = array(            'senha_user' => $senha,        );        if ($this->recuperar_model->edit('user', $data, 'codigo', $this->input->post('codigo')) == TRUE) {            $sql = "UPDATE user SET codigo = NULL, data_expirar = NULL WHERE email_user = ?";            $this->db->query($sql, array($email));            echo json_encode(array('result' => true, 'mensagen' => 'Sua senha foi alterada com sucesso, aguarde você está sendo redirecionado...', 'url' => base_url('login')));        } else {             echo json_encode(array('result' => false, 'mensagen' => 'Ocorreu um erro'));        }    }            function codigo(){        $this->db->select('codigo');        $this->db->where('codigo', $this->uri->segment(3));        $retorno = $this->db->get('user')->num_rows();        if(!$retorno > 0 ){            $this->session->set_flashdata('error','Este link não existe ou expirou, <br> aguarde você está sendo redirecionado...');             redirect(base_url().'login/returno?=false');        }        $this->load->view('dashboard/getMudaSenha');    }        function returno(){        $this->load->view('returno');    }        public function sair(){        $this->session->sess_destroy();        redirect('login');    }        public function telaBloqueada() {                 $email = $this->uri->segment(3);        $email = base64_decode($email);        $this->data['recuperarDados'] = $this->all_model->obterID('user','user_perfil','user_perfil.id_user = user.idUser','email_user', $email);        $this->load->view('dashboard/lockscreen', $this->data);    }            public function bloquearTela() {        function base64url_encode($data) {            return rtrim(strtr(base64_encode($data), '+/', '-_'), '=');        }        $email = $this->session->userdata('email_user');        $email = base64url_encode($email);        $this->session->sess_destroy();        redirect('login/telaBloqueada/' . $email);    }}